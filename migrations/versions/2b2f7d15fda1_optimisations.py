"""optimisations

Revision ID: 2b2f7d15fda1
Revises: 0cc356759c5f
Create Date: 2025-09-10 09:26:22.011081

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2b2f7d15fda1'
down_revision: Union[str, Sequence[str], None] = '0cc356759c5f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('key_pairs', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False))
    op.add_column('key_pairs', sa.Column('key_type', sa.String(length=20), nullable=False, comment='Type de clé'))
    op.add_column('key_pairs', sa.Column('key_size', sa.Integer(), nullable=False, comment='Taille de clé en bits'))
    op.add_column('key_pairs', sa.Column('usage_count', sa.Integer(), nullable=False, comment="Compteur d'utilisation"))
    op.add_column('key_pairs', sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True, comment='Dernière utilisation'))
    op.add_column('key_pairs', sa.Column('key_metadata', sa.Text(), nullable=True, comment='Métadonnées JSON'))
    op.alter_column('key_pairs', 'public_key',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               comment='Clé publique PEM',
               existing_nullable=False)
    op.alter_column('key_pairs', 'private_key_enc',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               comment='Clé privée chiffrée (hex)',
               existing_nullable=False)
    op.alter_column('key_pairs', 'expiry',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               comment='Expiration',
               existing_nullable=False)
    op.alter_column('key_pairs', 'revoked',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               comment='Révoquée')
    op.alter_column('key_pairs', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False)
    op.alter_column('key_pairs', 'reason',
               existing_type=sa.VARCHAR(),
               comment='Raison de révocation',
               existing_nullable=True)
    op.create_index('idx_key_pairs_created_at', 'key_pairs', ['created_at'], unique=False)
    op.create_index('idx_key_pairs_expiry', 'key_pairs', ['expiry'], unique=False)
    op.create_index('idx_key_pairs_key_type', 'key_pairs', ['key_type'], unique=False)
    op.create_index('idx_key_pairs_revoked', 'key_pairs', ['revoked'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_key_pairs_revoked', table_name='key_pairs')
    op.drop_index('idx_key_pairs_key_type', table_name='key_pairs')
    op.drop_index('idx_key_pairs_expiry', table_name='key_pairs')
    op.drop_index('idx_key_pairs_created_at', table_name='key_pairs')
    op.alter_column('key_pairs', 'reason',
               existing_type=sa.VARCHAR(),
               comment=None,
               existing_comment='Raison de révocation',
               existing_nullable=True)
    op.alter_column('key_pairs', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('key_pairs', 'revoked',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               comment=None,
               existing_comment='Révoquée')
    op.alter_column('key_pairs', 'expiry',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               comment=None,
               existing_comment='Expiration',
               existing_nullable=False)
    op.alter_column('key_pairs', 'private_key_enc',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               comment=None,
               existing_comment='Clé privée chiffrée (hex)',
               existing_nullable=False)
    op.alter_column('key_pairs', 'public_key',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               comment=None,
               existing_comment='Clé publique PEM',
               existing_nullable=False)
    op.drop_column('key_pairs', 'key_metadata')
    op.drop_column('key_pairs', 'last_used_at')
    op.drop_column('key_pairs', 'usage_count')
    op.drop_column('key_pairs', 'key_size')
    op.drop_column('key_pairs', 'key_type')
    op.drop_column('key_pairs', 'updated_at')
    # ### end Alembic commands ###
